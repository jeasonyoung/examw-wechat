<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
									  http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util.xsd">
	<!-- shiro -->
	<!-- 缓存管理器 使用Ehcache实现 -->
	<bean id="cacheManager"  class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- 缓存配置 -->
		<property name="cacheManagerConfigFile" value="classpath:spring-examw-wechat-ehcache-shiro.xml" />
	</bean>
	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher"  class="com.examw.netplatform.shiro.RetryLimitHashedCredentialsMatcher">
		<!-- 构造函数 -->
		<constructor-arg ref="cacheManager" />
		<!-- 摘要算法 -->
		<property name="hashAlgorithmName"  value="${algorithmName}" />
		<!-- 摘要迭代次数 -->
		<property name="hashIterations"  value="${hashIterations}" />
		<!-- 是否启用16进制存储凭证 -->
		<property name="storedCredentialsHexEncoded"  value="true" />
	</bean>
	<!-- Realm实现 -->
	<bean id="userRealm"  class="com.examw.netplatform.shiro.UserRealm">
		<!-- 用户服务接口 -->
		<property name="userService"  ref="userService" />
		<!-- 用户密码工具 -->
		<property name="passwordHelper"  ref="passwordHelper" />
		<!-- 凭证匹配器 -->
		<property name="credentialsMatcher"  ref="credentialsMatcher" />
		<!-- 是否启用缓存 -->
		<property name="cachingEnabled"  value="true" />
		<!-- 是否启用认证缓存 -->
		<property name="authenticationCachingEnabled"  value="true" />
		<!-- 认证缓存名称 -->
		<property name="authenticationCacheName"  value="authenticationCache" />
		<!-- 是否启用授权缓存 -->
		<property name="authorizationCachingEnabled"  value="true" />
		<!-- 授权缓存名称 -->
		<property name="authorizationCacheName"  value="authorizationCache" />
	</bean>
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"  class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
	<!-- 会话Cookie模版 -->
	<bean id="sessionIdCookie"  class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg  value="sid" />
		<property name="httpOnly"  value="true" />
		<property name="maxAge"  value="180000" />
	</bean>
	<!-- 会话Dao -->
	<bean id="sessionDao"  class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator"  ref="sessionIdGenerator" />
	</bean>
	<!-- 会话管理器 -->
	<bean id="sessionManager"  class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
        <property name="deleteInvalidSessions" value="true" />
        <property name="sessionValidationSchedulerEnabled" value="true" />
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
        <property name="sessionDAO" ref="sessionDao" />
        <property name="sessionIdCookieEnabled" value="true" />
        <property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"  class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="1800000" />
		<property name="sessionManager"  ref="sessionManager" />
	</bean>
	<!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm" />
        <property name="sessionManager" ref="sessionManager" />
        <property name="cacheManager" ref="cacheManager" />
    </bean>
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>
    <!-- 基于Form表单的身份证验证过滤器 -->
    <!-- <bean id="formAuthenticationFilter"  class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
    	<property name="usernameParam"  value="account" />
    	<property name="passwordParam"  value="password" />
    	<property name="loginUrl"  value="/admin/login"/>
    </bean> -->
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter"  class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    	<property name="securityManager"  ref="securityManager" />
    	<property name="loginUrl"  value="/admin/login" />
    	<!-- <property name="unauthorizedUrl"  value="/admin/unauthorized" /> -->
    	<!-- <property name="filters">
    		<util:map>
    			<entry  key="authc"  value-ref="formAuthenticationFilter" />
    		</util:map>
    	</property> -->
    	<property name="filterChainDefinitions">
    		<value>
    			/resources/** = anon
    			/admin/login = anon
    			/admin/verifyCodeImage = anon
    			/admin/unauthorized = anon
    			/admin/** = user
    			/error/** = anon
    		</value>
    	</property>
    </bean>
    <!-- shiro 生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>